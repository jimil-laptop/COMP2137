#!/usr/bin/env bash

echo

HOSTNAME=$(hostname)
USERNAME=$(whoami)
DATETIME=$(date '+%Y-%m-%d %H:%M:%S')

if [ -r /etc/os-release ]; then
    . /etc/os-release
    DISTRO="$NAME $VERSION"
else
    DISTRO=$(uname -sr)
fi

UPTIME=$(uptime -p)

CPU_MODEL=$(awk -F: '/model name/ {print $2; exit}' /proc/cpuinfo | sed 's/^[ \t]*//')

MEM_KB=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
if [ -n "$MEM_KB" ]; then
    if (( MEM_KB >= 1048576 )); then
        RAM=$(awk -v kb="$MEM_KB" 'BEGIN {printf "%.1f GB", kb/1048576}')
    else
        RAM=$(awk -v kb="$MEM_KB" 'BEGIN {printf "%.0f MB", kb/1024}')
    fi
else
    RAM="Unknown"
fi

# Disks: only real disks (TYPE=="disk")
DISK_INFO=""
while IFS= read -r line; do
    name=$(awk '{print $1}' <<<"$line")
    model=$(awk '{$1=$1; $2=$2; sub(/^ +/, ""); sub(/ +[^ ]+$/, ""); print}' <<<"$line")
    size=$(awk '{print $NF}' <<<"$line")
    [ -z "$model" ] && model="Unknown"
    DISK_INFO+="$name: $model, $size"$'\n'
done < <(lsblk -dn -o NAME,TYPE,MODEL,SIZE 2>/dev/null | awk '$2=="disk" {print $1, $3, $4}')

VIDEO_INFO=""
if command -v lspci >/dev/null 2>&1; then
    while IFS= read -r line; do
        VIDEO_INFO+="$line"$'\n'
    done < <(lspci 2>/dev/null | grep -E 'VGA|3D' || printf "Unknown\n")
else
    VIDEO_INFO="lspci not available"
fi

GW_LINE=$(ip route 2>/dev/null | awk '/^default/ {print; exit}')
if [ -n "$GW_LINE" ]; then
    GW_IP=$(awk '{for(i=1;i<=NF;i++) if ($i=="via") print $(i+1)}' <<<"$GW_LINE")
    GW_IF=$(awk '{for(i=1;i<=NF;i++) if ($i=="dev") print $(i+1)}' <<<"$GW_LINE")
    if [ -n "$GW_IF" ]; then
        HOST_ADDR=$(ip -4 addr show dev "$GW_IF" 2>/dev/null | awk '/inet / {print $2}' | cut -d/ -f1 | head -n1)
        [ -z "$HOST_ADDR" ] && HOST_ADDR="Unknown"
    else
        HOST_ADDR="Unknown"
    fi
else
    GW_IP="Unknown"
    HOST_ADDR="Unknown"
fi

DNS_SERVER=$(awk '/^nameserver/ {print $2; exit}' /etc/resolv.conf 2>/dev/null)
[ -z "$DNS_SERVER" ] && DNS_SERVER="Unknown"

USERS_LOGGED_IN=$(who | awk '{print $1}' | sort -u | paste -sd',' -)
[ -z "$USERS_LOGGED_IN" ] && USERS_LOGGED_IN="None"

DISK_SPACE=""
while IFS= read -r line; do
    mp=$(awk '{print $6}' <<<"$line")
    avail=$(awk '{print $4}' <<<"$line")
    DISK_SPACE+="$mp $avail"$'\n'
done < <(df -h -x tmpfs -x devtmpfs --output=source,size,used,avail,pcent,target | tail -n +2)

PROC_COUNT=$(ps -e --no-headers 2>/dev/null | wc -l)

LOAD_AVG=$(awk '{printf "%s, %s, %s\n", $1, $2, $3}' /proc/loadavg)

# Listening ports without asorti
PORTS=$(ss -tuln 2>/dev/null | awk '
    /^LISTEN/ {
        split($4,a,":")
        port=a[length(a)]
        if (port ~ /^[0-9]+$/) print port
    }
' | sort -n | uniq | paste -sd',' -)
[ -z "$PORTS" ] && PORTS="None"

if command -v ufw >/dev/null 2>&1; then
    UFW_STATUS=$(ufw status | head -n1 2>/dev/null)
    [ -z "$UFW_STATUS" ] && UFW_STATUS="Unknown"
else
    UFW_STATUS="ufw not installed"
fi

cat <<EOF
System Report for $HOSTNAME generated by $USERNAME, on $DATETIME

System Information
------------------
OS: $DISTRO
Uptime: $UPTIME
CPU: $CPU_MODEL
RAM: $RAM
Disk(s):
$(printf '%s' "$DISK_INFO" | sed 's/^/  /')
Video:
$(printf '%s' "$VIDEO_INFO" | sed 's/^/  /')
Host Address: $HOST_ADDR
Gateway IP: $GW_IP
DNS Server: $DNS_SERVER

System Status
-------------
Users Logged In: $USERS_LOGGED_IN
Disk Space:
$(printf '%s' "$DISK_SPACE" | sed 's/^/  /')
Process Count: $PROC_COUNT
Load Averages: $LOAD_AVG
Listening Network Ports: $PORTS
UFW Status: $UFW_STATUS
EOF

echo
